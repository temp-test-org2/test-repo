name: Release
on:
  push:
    branches:
      - main

permissions:
  contents: read # for checkout

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      pull-requests: write # to be able to comment on released pull requests
      packages: write # to be able to create a new package for the release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          scope: '@temp-test-org2'
          registry-url: https://npm.pkg.github.com/

      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.ORG_PAT_TEST_TEMP_ORG2_PACKAGE_READ }}

      - name: Build
        run: npm run build

      - name: Get release version
        id: release-version
        run: |
          OUTPUT="$(bash -c "unset GITHUB_ACTIONS && npx semantic-release --dry-run --no-ci --branches '${HEAD_REF}'")"
          NEW_RELEASE_VERSION=$(echo "$OUTPUT" | grep -oP 'The next release version is \K(\d+\.\d+\.\d+)')
          echo "new-release-version=$NEW_RELEASE_VERSION" >> "GITHUB_OUTPUT"
        env:
          HEAD_REF: ${{ github.head_ref }}

      - name: Use the version
        run: echo "The version is ${{ steps.release-version.outputs.new-release-version }}"

      - name: Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
